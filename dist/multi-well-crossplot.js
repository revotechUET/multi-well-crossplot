/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../bower_components/regression-js/dist/regression.js":
/*!************************************************************!*\
  !*** ../bower_components/regression-js/dist/regression.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var mod; }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n\n\n//# sourceURL=webpack:///../bower_components/regression-js/dist/regression.js?");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-crossplot/style.less":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-crossplot/style.less ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"multi-well-crossplot {\\n  /* change style special of wi-base-treeview for basemap */\\n}\\nmulti-well-crossplot .red-color {\\n  color: #cc6d6d;\\n}\\nmulti-well-crossplot .blue-color {\\n  color: #0077be;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:horizontal:increment {\\n  /* Right */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:horizontal:decrement {\\n  /* Left */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:vertical:increment {\\n  /* Down */\\n  background-image: none;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-button:vertical:decrement {\\n  /* Up */\\n  background-image: none;\\n}\\nmulti-well-crossplot wi-tree-view div input {\\n  width: 100%;\\n  line-height: 1.4;\\n  padding: 10px 10px 10px 14px;\\n  border: none;\\n  border-bottom: 1px solid #f0f0f0;\\n  outline: none;\\n  box-sizing: border-box;\\n}\\nmulti-well-crossplot wi-tree-view div input::placeholder {\\n  color: #cecece;\\n}\\nmulti-well-crossplot wi-table-view div.cell {\\n  display: table-cell;\\n  padding: 7px 10px;\\n  border-right: 1px solid #d4d4d4;\\n  border-bottom: 1px solid #d4d4d4;\\n  cursor: default;\\n  position: relative;\\n  border-top: none;\\n  border-left: none;\\n}\\nmulti-well-crossplot wi-table-view div.table {\\n  margin-top: 0;\\n}\\nmulti-well-crossplot wi-dropdown-list:focus {\\n  outline: none !important;\\n}\\nmulti-well-crossplot wi-dropdown-list .ui-select-bootstrap > .ui-select-match > .btn {\\n  border: none;\\n  box-shadow: none;\\n  outline: none;\\n  display: flex;\\n  align-items: center;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default:active:focus {\\n  background-color: #fff;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default.active,\\nmulti-well-crossplot wi-dropdown-list .btn-default:active,\\nmulti-well-crossplot wi-dropdown-list .open > .dropdown-toggle.btn-default {\\n  color: #333;\\n  background-color: #fff;\\n  background-image: none;\\n  border-color: #adadad;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default.focus,\\nmulti-well-crossplot wi-dropdown-list .btn-default:focus {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-crossplot wi-dropdown-list .form-control {\\n  border: none;\\n}\\nmulti-well-crossplot wi-dropdown-list :focus {\\n  outline: none;\\n}\\nmulti-well-crossplot wi-dropdown-list .form-control:focus {\\n  border: none;\\n  box-shadow: none;\\n}\\nmulti-well-crossplot wi-dropdown-list .btn-default:hover {\\n  color: #333;\\n  background-color: #fff;\\n  border-color: #fff;\\n}\\nmulti-well-crossplot side-bar > div div.content {\\n  overflow-x: hidden;\\n  height: 100%;\\n  display: flex;\\n  overflow-y: auto;\\n  /* padding-left: 15px; */\\n  flex-direction: row;\\n}\\nmulti-well-crossplot wi-droppable {\\n  height: 100%;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret,\\nmulti-well-crossplot wi-tree-node .node-label,\\nmulti-well-crossplot wi-tree-node .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 12px;\\n}\\nmulti-well-crossplot wi-tree-node .node-caret {\\n  color: #cccbcb;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 16px;\\n}\\nmulti-well-crossplot wi-tree-node .node-content.search-mode > div {\\n  opacity: 1;\\n}\\nmulti-well-crossplot wi-tree-node .node-content,\\nmulti-well-crossplot wi-tree-node .node-content::after {\\n  line-height: 3em;\\n}\\nmulti-well-crossplot .ui-select-match-text {\\n  text-align: right;\\n}\\nmulti-well-crossplot button.disable {\\n  color: #aaa;\\n  border-color: #aaa;\\n}\\nmulti-well-crossplot .main {\\n  display: flex;\\n  height: 100%;\\n  flex-direction: column;\\n}\\nmulti-well-crossplot .main .main-toolbar {\\n  flex-basis: 44px;\\n  background: #0074c5;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item {\\n  margin: 0 15px;\\n  color: #fff;\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item .select-proj4 {\\n  box-shadow: none;\\n  border: none;\\n  border-radius: 0;\\n  font-size: 12px;\\n  color: #fff;\\n  background: none;\\n}\\nmulti-well-crossplot .main .main-toolbar .menu-item .select-proj4:focus {\\n  border-color: none;\\n  outline: none;\\n  -webkit-box-shadow: none;\\n  box-shadow: none;\\n}\\nmulti-well-crossplot .main .statistic-table {\\n  margin: 10px 35px;\\n  position: relative;\\n  overflow: auto;\\n  flex-basis: 200px;\\n}\\nmulti-well-crossplot .main .main-body {\\n  flex: 1;\\n  display: flex;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-crossplot .main .main-body .border-style {\\n  border: 1px solid #eee;\\n  border-top-right-radius: 3px;\\n  border-top-left-radius: 3px;\\n}\\nmulti-well-crossplot .main .main-body .main-body-left {\\n  display: flex;\\n  z-index: 1;\\n  height: calc(100%);\\n}\\nmulti-well-crossplot .main .main-body .main-body-left .input-search-list-view {\\n  background: #fff;\\n  width: 100%;\\n  height: 44px;\\n  border: 1px solid #ffffff4a;\\n  border-bottom: 1px solid #eaeaea;\\n  padding: 10px 20px 10px 15px;\\n  font-weight: bold;\\n}\\nmulti-well-crossplot .main .main-body .main-body-left ::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-crossplot .main .main-body .main-body-left :focus::-webkit-input-placeholder {\\n  opacity: 0.5;\\n  color: rgba(0, 0, 0, 0.253);\\n  /* font-weight: 100; */\\n}\\nmulti-well-crossplot .main .main-body .main-body-left .input-search-list-view:focus {\\n  outline: none;\\n}\\nmulti-well-crossplot .main .main-body .main-body-center {\\n  flex: 1;\\n  display: flex;\\n  height: 100%;\\n  position: relative;\\n  flex-direction: column;\\n}\\nmulti-well-crossplot .main .button-update {\\n  background: #0077be;\\n  color: #fff;\\n  font-weight: bold;\\n  flex: 1;\\n  padding: 10px;\\n  text-align: center;\\n  margin: 9px 15px 15px 15px;\\n  border-radius: 2px;\\n  transition: all 0.2s ease-in;\\n  cursor: pointer;\\n}\\nmulti-well-crossplot .main .button-update:hover {\\n  background: #1ba0ec;\\n  transition: all 0.5s;\\n}\\nmulti-well-crossplot .main .label-list-view {\\n  padding: 16px 15px;\\n  font-weight: bold;\\n  background: #fff;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  font-weight: 400;\\n  right: 0;\\n  position: sticky;\\n}\\nmulti-well-crossplot .main .label-info-image {\\n  background: #fff;\\n  min-width: 99px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 3px;\\n  padding: 5px 10px;\\n  margin-right: 15px;\\n  justify-content: space-between;\\n}\\nmulti-well-crossplot .main .button-td {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  padding: 3px 10px;\\n  border-radius: 2px;\\n  border: 1px solid #e8e8e8;\\n}\\nmulti-well-crossplot .main .button-td:hover {\\n  background: #87c1ff;\\n  color: #fff;\\n}\\nmulti-well-crossplot .main .header-icon {\\n  margin-right: 15px;\\n  cursor: pointer;\\n  width: 10px;\\n}\\nmulti-well-crossplot .main .label-button {\\n  float: right;\\n  font-size: 115%;\\n  color: #bbbbbb;\\n  margin: 2px 5px 0 15px;\\n  pointer-events: none;\\n}\\nmulti-well-crossplot .main .button-with-lable-layer {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 7px;\\n  margin-left: 5px;\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  flex: 1;\\n  text-align: center;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-lable-layer:hover {\\n  background: #fff;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-lable {\\n  cursor: pointer;\\n  background: #f4f4f4;\\n  font-size: 10px;\\n  padding: 5px 10px;\\n  border: 1px solid #f4f4f4;\\n  border-radius: 20px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .button-with-lable:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .main .button-with-lable.active {\\n  background: #f4f4f4;\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .tab-with-lable {\\n  cursor: pointer;\\n  opacity: 0.3;\\n  transition: all 0.2s ease-in;\\n  transform: rotate(90deg);\\n  margin: 25px 0px;\\n  width: 40px;\\n  white-space: nowrap;\\n  font-weight: bold;\\n}\\nmulti-well-crossplot .main .tab-with-lable:hover {\\n  color: #0077be;\\n  opacity: 1;\\n}\\nmulti-well-crossplot .main .tab-with-lable.active {\\n  opacity: 1;\\n  color: #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .select-table-header {\\n  border: 1px solid #eee;\\n  background: #f4f4f4;\\n  padding: 5px 8px;\\n  margin: 0 8px 8px 0;\\n  cursor: pointer;\\n  border-radius: 2px;\\n}\\nmulti-well-crossplot .main .select-table-header.active {\\n  color: #0077be;\\n  border: 1px solid #0077be;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .lable-option-sidebar {\\n  font-weight: bold;\\n  font-size: 12px;\\n  color: #646464;\\n  background: #fff;\\n  padding: 11px 16px;\\n}\\nmulti-well-crossplot .main .selection-sidebar {\\n  border: 1px solid #e4e4e4;\\n  border-radius: 2px;\\n  padding: 1px 10px;\\n  align-items: center;\\n  display: flex;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .main .selection-sidebar:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .main .selection-sidebar > input:focus {\\n  outline: none;\\n}\\nmulti-well-crossplot .main .input-suggestions {\\n  margin-left: 10px;\\n  border: none;\\n  flex: 1;\\n  color: #0077be;\\n  text-align: right;\\n}\\nmulti-well-crossplot .axis-bar {\\n  background: #fff;\\n  border-radius: 2px;\\n  border: 1px solid #fff;\\n  font-size: 10px;\\n  display: flex;\\n  align-items: center;\\n  padding: 8px 10px;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .axis-bar:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .axis-bar.selected {\\n  font-weight: bold;\\n  color: #0077be;\\n}\\nmulti-well-crossplot .axis-bar::after {\\n  content: \\\"2r\\\";\\n  color: transparent;\\n  display: block;\\n  top: 0;\\n  width: 4px;\\n  right: 0;\\n}\\nmulti-well-crossplot .bottom-add {\\n  background: #f4f4f4;\\n  padding: 10px;\\n  border-radius: 2px;\\n  text-align: center;\\n  margin: 15px 15px 0 15px;\\n  cursor: pointer;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .bottom-add:hover {\\n  background: #e7e7e7;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .list-formular {\\n  padding: 0 5px 0 15px;\\n  margin: 15px;\\n  display: flex;\\n  border-radius: 2px;\\n  border: 1px solid #ddd;\\n  transition: all 0.2s ease-in;\\n}\\nmulti-well-crossplot .list-formular:hover {\\n  border: 1px solid #0077be;\\n}\\nmulti-well-crossplot .delete-button {\\n  padding: 10px;\\n  cursor: pointer;\\n  font-size: 15px;\\n  color: #aaa;\\n  align-items: center;\\n  border: none;\\n  display: flex;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar {\\n  background: #fff;\\n  width: 5px;\\n}\\nmulti-well-crossplot ::-webkit-scrollbar-thumb {\\n  background-color: #fff;\\n}\\nmulti-well-crossplot .fix-header-table {\\n  overflow-y: auto;\\n  display: flex;\\n  flex: 1;\\n}\\nmulti-well-crossplot .fix-header-table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-crossplot .rectangle {\\n  border: 0.5px solid #a7a7a7;\\n  width: 12px;\\n  height: 12px;\\n  border-radius: 11px;\\n  background: #0077be;\\n}\\nmulti-well-crossplot table {\\n  border-collapse: collapse;\\n  table-layout: fixed;\\n  width: 100%;\\n  user-select: none;\\n}\\nmulti-well-crossplot table th {\\n  position: sticky;\\n  top: 0;\\n}\\nmulti-well-crossplot thead {\\n  border-bottom: 1px solid #ccc;\\n}\\nmulti-well-crossplot td,\\nmulti-well-crossplot th {\\n  border-bottom: 1px solid #f0f0f0;\\n  border-right: 1px solid #f0f0f0;\\n  padding-top: 10px;\\n  padding-bottom: 9px;\\n  padding-left: 14px;\\n  overflow: hidden;\\n}\\nmulti-well-crossplot tr {\\n  border-right: 4px solid #fff;\\n}\\nmulti-well-crossplot tr.updated {\\n  background-color: #c2eaff70;\\n}\\nmulti-well-crossplot tr.created {\\n  background-color: #abeaab29;\\n}\\nmulti-well-crossplot tr.deleted {\\n  background-color: #f4f4f4;\\n  pointer-events: none;\\n  color: #d8d3d3;\\n}\\nmulti-well-crossplot tr:hover {\\n  border-right: 4px solid #0077be;\\n  background: #f9f9f9;\\n}\\nmulti-well-crossplot th {\\n  padding-top: 9px;\\n  padding-bottom: 10px;\\n  text-align: left;\\n  background-color: #ffffff;\\n  color: #0077be;\\n}\\nmulti-well-crossplot ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: #9e9e9e;\\n  opacity: 1;\\n  /* Firefox */\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./multi-well-crossplot/style.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/addStyles.js":
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/urls.js":
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n    multiWellCrossplot: __webpack_require__(/*! ./multi-well-crossplot */ \"./multi-well-crossplot/index.js\")\n}\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./multi-well-crossplot/index.js":
/*!***************************************!*\
  !*** ./multi-well-crossplot/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var componentName = 'multiWellCrossplot';\nmodule.exports.name = componentName;\n__webpack_require__(/*! ./style.less */ \"./multi-well-crossplot/style.less\");\nconst regression = __webpack_require__(/*! ../../bower_components/regression-js/dist/regression.js */ \"../bower_components/regression-js/dist/regression.js\");\n\nconst _DECIMAL_LEN = 4;\n\nvar app = angular.module(componentName, [\n\t'sideBar', 'wiTreeView', 'wiTableView',\n\t'wiApi', 'editable', \n\t'wiDialog',\n\t'wiDroppable', 'wiDropdownList', \n\t'plot-toolkit', \n\t'wiLoading', 'line-style'\n]);\napp.component(componentName, {\n\ttemplate: __webpack_require__(/*! ./template.html */ \"./multi-well-crossplot/template.html\"),\n\tcontroller: multiWellCrossplotController,\n\tcontrollerAs: 'self',\n\tbindings: {\n\t\ttoken: \"<\",\n\t\tidProject: \"<\",\n\t\twellSpec: \"<\",\n\t\tzonesetName: \"<\",\n\t\tselectionType: \"<\",\n\t\tselectionXValue: \"<\",\n\t\tselectionYValue: \"<\",\n\t\tselectionZ1Value: \"<\",\n\t\tselectionZ2Value: \"<\",\n\t\tselectionZ3Value: \"<\",\n\t\tidCrossplot: \"<\",\n\t\tconfig: '<',\n\t\tprintSettings: '<',\n\t\tonSave: '<',\n\t\tudls: '<',\n\t\tregs: '<',\n\t},\n\ttransclude: true\n});\n\nfunction multiWellCrossplotController($scope, $timeout, $element, wiToken, wiApi, wiDialog, wiLoading) {\n\tlet self = this;\n\tself.treeConfig = [];\n\tself.selectedNode = null;\n\tself.datasets = {};\n\t//--------------\n\t$scope.tab = 1;\n\tself.selectionTab = self.selectionTab || 'Wells';\n\n\t$scope.setTab = function(newTab){\n\t\t$scope.tab = newTab;\n\t};\n\n\t$scope.isSet = function(tabNum){\n\t\treturn $scope.tab === tabNum;\n\t};\n\n\t//--------------\n\tthis.getDataset = function(well) {\n\t\twiApi.getCachedWellPromise(well.idWell).then((well) => {\n\t\t\tself.datasets[well] = well.datasets;\n\t\t}).catch(e => console.error(e));\n\t}\n\n\tfunction getCurvesInWell(well) {\n\t\tlet curves = [];\n\t\twell.datasets.forEach(dataset => {\n\t\t\tcurves.push(...dataset.curves);\n\t\t});\n\t\treturn curves;\n\t}\n\n\tfunction getFamilyInWell(well) {\n\t\tlet curves = getCurvesInWell(well);\n\t\tlet familyList = curves.map(c => wiApi.getFamily(c.idFamily));\n\t\treturn familyList;\n\t}\n\tthis.$onInit = function () {\n\t\tif (self.token)\n\t\t\twiToken.setToken(self.token);\n\t\t$timeout(() => {\n\t\t\t$scope.$watch(() => (self.wellSpec.map(wsp => wsp.idWell)), () => {\n\t\t\t\tgetTree();\n\t\t\t}, true);\n\t\t\t$scope.$watch(() => (self.selectionType), () => {\n\t\t\t\tgetSelectionList(self.selectionType, self.treeConfig);\n\t\t\t\tupdateDefaultConfig();\n\t\t\t});\n\t\t\t$scope.$watch(() => {\n\t\t\t\treturn `${self.selectionXValue}-${self.selectionYValue}`;\n\t\t\t}, () => {\n\t\t\t\tupdateDefaultConfig();\n\t\t\t});\n\t\t\t$scope.$watch(() => (self.treeConfig.map(w => w.idWell)), () => {\n\t\t\t\tgetSelectionList(self.selectionType, self.treeConfig);\n\t\t\t\tgetZonesetsFromWells(self.treeConfig);\n\t\t\t\tupdateDefaultConfig();\n\t\t\t}, true);\n\t\t}, 700);\n\n\t\tself.defaultConfig = self.defaultConfig || {};\n\t\tself.wellSpec = self.wellSpec || [];\n\t\tself.selectionType = self.selectionType || 'family-group';\n\t\tself.zoneTree = [];\n\t\tself.zonesetName = self.zonesetName || \"ZonationAll\";\n\t\tself.config = self.config || {grid:true, displayMode: 'bar', colorMode: 'zone', stackMode: 'well', binGap: 5, title: self.title || ''};\n\t\tself.printSettings = self.printSettings || {orientation: 'portrait', aspectRatio: '16:9', alignment: 'left'};\n\t\tself.udls = self.udls || [];\n\t\tself.regs = self.regs || [];\n\t}\n\n\tthis.onInputXSelectionChanged = function(selectedItemProps) {\n\t\tself.selectionXValue = (selectedItemProps || {}).name;\n\t}\n\n\tthis.onInputYSelectionChanged = function(selectedItemProps) {\n\t\tself.selectionYValue = (selectedItemProps || {}).name;\n\t}\n\n\tthis.onInputZ1SelectionChanged = function(selectedItemProps) {\n\t\tself.selectionZ1Value = (selectedItemProps || {}).name;\n\t}\n\n\tthis.onInputZ2SelectionChanged = function(selectedItemProps) {\n\t\tself.selectionZ2Value = (selectedItemProps || {}).name;\n\t}\n\n\tthis.onInputZ3SelectionChanged = function(selectedItemProps) {\n\t\tself.selectionZ3Value = (selectedItemProps || {}).name;\n\t}\n\n\tthis.getFilterForWell = (axis) => {\n\t\tswitch(axis) {\n\t\t\tcase 'xAxis':\n\t\t\t\treturn self.selectionXValue;\n\t\t\tcase 'yAxis':\n\t\t\t\treturn self.selectionYValue;\n\t\t\tcase 'z1Axis':\n\t\t\t\treturn self.selectionZ1Value;\n\t\t\tcase 'z2Axis':\n\t\t\t\treturn self.selectionZ2Value;\n\t\t\tcase 'z3Axis':\n\t\t\t\treturn self.selectionZ3Value;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tfunction getSelectionList(selectionType, wellArray) {\n\t\tlet selectionHash = {};\n\t\tlet allCurves = [];\n\t\twellArray.forEach(well => {\n\t\t\tlet curvesInWell = getCurvesInWell(well);\n\t\t\tallCurves.push(...curvesInWell);\n\t\t});\n\t\tswitch(selectionType) {\n\t\t\tcase 'curve':\n\t\t\t\tallCurves.forEach(curve => {\n\t\t\t\t\tselectionHash[curve.name] = 1;\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tcase 'family': \n\t\t\t\tallCurves.forEach(curve => {\n\t\t\t\t\tlet family = wiApi.getFamily(curve.idFamily);\n\t\t\t\t\tif(family)\n\t\t\t\t\t\tselectionHash[family.name] = 1;\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t\tcase 'family-group':\n\t\t\t\tallCurves.forEach(curve => {\n\t\t\t\t\tlet family = wiApi.getFamily(curve.idFamily);\n\t\t\t\t\tif(family)\n\t\t\t\t\t\tselectionHash[family.familyGroup] = 1;\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t}\n\t\tself.selectionList = Object.keys(selectionHash).map(item => ({ \n\t\t\tdata:{label:item}, \n\t\t\tproperties:{name:item} \n\t\t}));\n\t}\n\n\tthis.runMatch = function (node, criteria) {\n\t\tlet family;\n\t\tif (!criteria) return true;\n\t\tswitch(self.selectionType) {\n\t\t\tcase 'family-group': \n\t\t\t\tfamily = wiApi.getFamily(node.idFamily);\n\t\t\t\tif (!family) return null;\n\t\t\t\treturn family.familyGroup.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n\t\t\tcase 'family': \n\t\t\t\tfamily = wiApi.getFamily(node.idFamily);\n\t\t\t\tif (!family) return null;\n\t\t\t\treturn family.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n\n\t\t\tcase 'curve':\n\t\t\t\treturn node.name.trim().toLowerCase() === criteria.trim().toLowerCase();\n\t\t}\n\t}\n\tthis.getLabel = function (node) {\n\t\treturn node.name;\n\t}\n\tthis.getIcon = function (node) {\n\t\tif (node.idCurve) return 'curve-16x16';\n\t\tif (node.idDataset) return 'curve-data-16x16';\n\t\tif (node.idWell) return 'well-16x16';\n\t}\n\tthis.getChildren = function (node) {\n\t\tif (node.idDataset) {\n\t\t\treturn node.curves;\n\t\t}\n\t\tif (node.idWell) {\n\t\t\treturn node.datasets;\n\t\t}\n\t\treturn [];\n\t}\n\tthis.clickFunction = clickFunction;\n\tfunction clickFunction($event, node, selectedObjs, treeRoot) {\n\t\tlet wellSpec = self.wellSpec.find(wsp => wsp.idWell === treeRoot.idWell);\n\t\tswitch(treeRoot.isSettingAxis) {\n\t\t\tcase 'xAxis':\n\t\t\t\twellSpec.xAxis = {};\n\t\t\t\twellSpec.xAxis.idCurve = node.idCurve;\n\t\t\t\twellSpec.xAxis.idDataset = node.idDataset;\n\t\t\t\tbreak;\n\t\t\tcase 'yAxis':\n\t\t\t\twellSpec.yAxis = {};\n\t\t\t\twellSpec.yAxis.idCurve = node.idCurve;\n\t\t\t\twellSpec.yAxis.idDataset = node.idDataset;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\tthis.refresh = function(){\n\t\tself.layers.length = 0;\n\t\tself.treeConfig.length = 0;\n\t\tgetTree();\n\t};\n\tasync function getTree(callback) {\n\t\twiLoading.show($element.find('.main')[0]);\n\t\tself.treeConfig = [];\n\t\tlet promises = [];\n\t\tfor (let w of self.wellSpec) {\n\t\t\ttry {\n\t\t\t\tlet well = await wiApi.getCachedWellPromise(w.idWell || w);\n\t\t\t\twell.isSettingAxis = 'xAxis';\n\t\t\t\twell.isSettingZAxis = 'z1Axis'\n\t\t\t\t$timeout(() => self.treeConfig.push(well));\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t}\n\t\tcallback && callback();\n\t\twiLoading.hide();\n\t}\n\tfunction getZonesetsFromWells(wells) {\n\t\tlet zsList;\n\t\tfor (let well of wells) {\n\t\t\tlet zonesets = well.zone_sets;\n\t\t\tif (!zsList) {\n\t\t\t\tzsList = angular.copy(zonesets);\n\t\t\t}\n\t\t\telse if (zsList.length) {\n\t\t\t\tzsList = intersectAndMerge(zsList, zonesets);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tself.zonesetList = (zsList || []).map( zs => ({\n\t\t\tdata: {\n\t\t\t\tlabel: zs.name\n\t\t\t},\n\t\t\tproperties: zs\n\t\t}));\n\t\tself.zonesetList.splice(0, 0, {data: {label: 'ZonationAll'}, properties: genZonationAllZS(0, 1)});\n\t}\n\tfunction intersectAndMerge(dstZoneList, srcZoneList) {\n\t\treturn dstZoneList.filter(zs => {\n\t\t\tlet zoneset = srcZoneList.find(zs1 => zs.name === zs1.name);\n\t\t\tif (!zoneset) return false;\n\t\t\tfor (let z of zoneset.zones) {\n\t\t\t\tlet zone = zs.zones.find(zo => zo.zone_template.name == z.zone_template.name);\n\t\t\t\tif (!zone) {\n\t\t\t\t\tzs.zones.push(angular.copy(z));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\tthis.getWellSpec = getWellSpec;\n\tfunction getWellSpec(well) {\n\t\tif (!well) return {};\n\t\treturn self.wellSpec.find(wsp => wsp.idWell === well.idWell);\n\t}\n\tthis.getCurve = getCurve;\n\tfunction getCurve(well, requiredAxis) {\n\t\tlet wellSpec = getWellSpec(well);\n\t\tif (!Object.keys(wellSpec).length) return {};\n\t\tlet axis = requiredAxis || well.isSettingAxis;\n\t\tlet curves = getCurvesInWell(well).filter(c => self.runMatch(c, self.getFilterForWell(axis)));\n\t\tlet curve = wellSpec[axis] && wellSpec[axis].idCurve ? curves.find(c => c.idCurve === wellSpec[axis].idCurve) : curves[0];\n\t\tif (!curve) {\n\t\t\twellSpec[axis] = {};\n\t\t\treturn;\n\t\t}\n\t\twellSpec[axis] = {}\n\t\twellSpec[axis].curveName = curve.name;\n\t\twellSpec[axis].idCurve = curve.idCurve;\n\t\twellSpec[axis].idDataset = curve.idDataset;\n\n\t\tlet datasets = self.getChildren(well);\n\t\tlet dataset = wellSpec[axis] && wellSpec[axis].idDataset ? datasets.find(ds => ds.idDataset === wellSpec[axis].idDataset):datasets[0];\n\t\twellSpec[axis].datasetName = dataset.name;\n\t\twellSpec[axis].datasetTop = parseFloat(dataset.top);\n\t\twellSpec[axis].datasetBottom = parseFloat(dataset.bottom);\n\t\twellSpec[axis].datasetStep = parseFloat(dataset.step);\n\t\treturn curve;\n\t}\n\tfunction getZoneset(well, zonesetName = \"\") {\n\t\tlet zonesets = well.zone_sets;\n\t\tif (zonesetName === \"\" || zonesetName === \"ZonationAll\") \n\t\t\treturn null;\n\t\treturn zonesets.find(zs => zs.name === zonesetName);\n\t}\n\tthis.onZonesetSelectionChanged = function(selectedItemProps) {\n\t\tself.zoneTree = (selectedItemProps || {}).zones;\n\t\tself.zonesetName = (selectedItemProps || {}).name || 'ZonationAll';\n\t}\n\tthis.runZoneMatch = function (node, criteria) {\n\t\tlet keySearch = criteria.toLowerCase();\n\t\tlet searchArray = node.zone_template.name.toLowerCase();\n\t\treturn searchArray.includes(keySearch);\n\t}\n\tthis.getZoneLabel = function (node) {\n\t\tif(!node || !node.zone_template){\n\t\t\treturn 'aaa';\n\t\t}\n\t\treturn node.zone_template.name;\n\t}\n\n\tthis.getZoneIcon = (node) => ( (node && !node._notUsed) ? 'zone-16x16': 'fa fa-eye-slash' )\n\tconst EMPTY_ARRAY = []\n\tthis.noChildren = function (node) {\n\t\treturn EMPTY_ARRAY;\n\t}\n\tthis.click2ToggleZone = function ($event, node, selectedObjs) {\n\t\tnode._notUsed = !node._notUsed;\n\t\tself.selectedZones = Object.values(selectedObjs).map(o => o.data);\n\t}\n\tthis.click2ToggleLayer = function ($event, node, selectedObjs) {\n\t\tnode._notUsed = !node._notUsed;\n\t\tself.selectedLayers = Object.values(selectedObjs).map(o => o.data);\n\t}\n\tthis.click2ToggleRegression = function ($event, node, selectedObjs) {\n\t\tnode._useReg = !node._useReg;\n\t\tif (node._useReg) {\n\t\t\tlet data = node.dataX.map((x, i) => {\n\t\t\t\treturn [x, node.dataY[i]];\n\t\t\t})\n\t\t\tlet result = regression.linear(data);\n\t\t\tconsole.log(result);\n\t\t\tnode.reg = {\n\t\t\t\tfamily: 'linear', \n\t\t\t\tslope: result.equation[0], \n\t\t\t\tintercept: result.equation[1],\n\t\t\t\tlineStyle: [10, 0],\n\t\t\t\tlineColor: node.color,\n\t\t\t\tlineWidth: 1\n\t\t\t};\n\t\t\tconsole.log(self.layers);\n\t\t}\n\t\t// self.selectedLayers = Object.values(selectedObjs).map(o => o.data);\n\t}\n\n\tthis.runLayerMatch = function (node, criteria) {\n\t\tlet keySearch = criteria.toLowerCase();\n\t\tlet searchArray = node.name.toLowerCase();\n\t\treturn searchArray.includes(keySearch);\n\t}\n\tlet _layerTree = [];\n\tthis.getLayerTree = function() {\n\t\treturn self.layers;\n\t}\n\tthis.getLayerLabel = (node) => node.name\n\tthis.getLayerIcon = (node) => ( (node && !node._notUsed) ? 'layer-16x16': 'fa fa-eye-slash' )\n\tthis.getRegIcon = (node) => ( (node && node._useReg) ? 'layer-16x16': 'fa fa-eye-slash' )\n\tthis.getLayerIcons = (node) => ( [\"rectangle\"] )\n\tthis.getRegIcons = (node) => ( [\"rectangle\"] )\n\tthis.getLayerIconStyle = (node) => ( {\n\t\t'background-color': node.color\n\t} )\n\n\tthis.getConfigLeft = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.left) ? \"[empty]\": wiApi.bestNumberFormat(self.config.left, 3);\n\t}\n\tthis.getConfigLimitTop = function () {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.limitTop) ? \"[empty]\": wiApi.bestNumberFormat(self.config.limitTop, 3);\n\t}\n\tthis.getConfigLimitBottom = function () {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.limitBottom) ? \"[empty]\": wiApi.bestNumberFormat(self.config.limitBottom, 3);\n\t}\n\tthis.setConfigLimitTop = function (notUse, newValue) {\n\t\tself.config.limitTop = parseFloat(newValue)\n\t}\n\tthis.setConfigLimitBottom = function (notUse, newValue) {\n\t\tself.config.limitBottom = parseFloat(newValue)\n\t}\n\tthis.setConfigLeft = function(notUse, newValue) {\n\t\tself.config.left = parseFloat(newValue);\n\t}\n\tthis.getConfigRight = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.right) ? \"[empty]\": wiApi.bestNumberFormat(self.config.right, 3);\n\t}\n\tthis.setConfigRight = function(notUse, newValue) {\n\t\tself.config.right = parseFloat(newValue);\n\t}\n\tthis.getConfigMajorX = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.majorX) ? \"[empty]\": wiApi.bestNumberFormat(self.config.majorX, 3);\n\t}\n\tthis.setConfigMajorX = function(notUse, newValue) {\n\t\tself.config.majorX = parseFloat(newValue);\n\t}\n\tthis.getConfigMajorY = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.majorY) ? \"[empty]\": wiApi.bestNumberFormat(self.config.majorY, 3);\n\t}\n\tthis.setConfigMajorY = function(notUse, newValue) {\n\t\tself.config.majorY = parseFloat(newValue);\n\t}\n\tthis.getConfigMinorX = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.minorX) ? \"[empty]\": wiApi.bestNumberFormat(self.config.minorX, 3);\n\t}\n\tthis.setConfigMinorX = function(notUse, newValue) {\n\t\tself.config.minorX = parseFloat(newValue);\n\t}\n\tthis.getConfigMinorY = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.minorY) ? \"[empty]\": wiApi.bestNumberFormat(self.config.minorY, 3);\n\t}\n\tthis.setConfigMinorY = function(notUse, newValue) {\n\t\tself.config.minorY = parseFloat(newValue);\n\t}\n\tthis.getConfigTop = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.top) ? \"[empty]\": wiApi.bestNumberFormat(self.config.top, 3);\n\t}\n\tthis.setConfigTop = function(notUse, newValue) {\n\t\tself.config.top = parseFloat(newValue);\n\t}\n\tthis.getConfigBottom = function() {\n\t\tself.config = self.config || {};\n\t\treturn isNaN(self.config.bottom) ? \"[empty]\": wiApi.bestNumberFormat(self.config.bottom, 3);\n\t}\n\tthis.setConfigBottom = function(notUse, newValue) {\n\t\tself.config.bottom = parseFloat(newValue);\n\t}\n\tthis.getConfigTitle = function() {\n\t\tself.config = self.config || {};\n\t\treturn (self.config.title || \"\").length ? self.config.title : \"New Crossplot\";\n\t}\n\tthis.setConfigTitle = function(notUse, newValue) {\n\t\tself.config.title = newValue;\n\t}\n\tthis.getConfigXLabel = function() {\n\t\tself.config = self.config || {};\n\t\treturn (self.config.xLabel || \"\").length ? self.config.xLabel : ((self.getCurve(self.treeConfig[0], 'xAxis')||{}).name || '[Unknown]');\n\t}\n\tthis.setConfigXLabel = function(notUse, newValue) {\n\t\tself.config.xLabel = newValue;\n\t}\n\tthis.getConfigYLabel = function() {\n\t\tself.config = self.config || {};\n\t\treturn (self.config.yLabel || \"\").length ? self.config.yLabel : ((self.getCurve(self.treeConfig[0], 'yAxis') || {}).name || '[Unknown]');\n\t}\n\tthis.setConfigYLabel = function(notUse, newValue) {\n\t\tself.config.yLabel = newValue;\n\t}\n\tthis.getFnUDL = function(index) {\n\t\treturn (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n\t}\n\tthis.setFnUDL = function(index, newValue) {\n\t\tself.udls[index].text = newValue;\n\t}\n\tthis.getLineStyleUDL = function(index) {\n\t\treturn (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n\t}\n\tthis.setLineStyleUDL = function(index, newValue) {\n\t\tself.udls[index].text = newValue;\n\t}\n\tthis.getLineWidthUDL = function(index) {\n\t\treturn (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n\t}\n\tthis.setLineWidthUDL = function(index, newValue) {\n\t\tself.udls[index].text = newValue;\n\t}\n\tthis.getLineColorUDL = function(index) {\n\t\treturn (self.udls[index].text || '').length ? self.udls[index].text : '[empty]';\n\t}\n\tthis.setLineColorUDL = function(index, newValue) {\n\t\tself.udls[index].text = newValue;\n\t}\n\tfunction clearDefaultConfig() {\n\t\tself.defaultConfig = {};\n\t}\n\tfunction updateDefaultConfig() {\n\t\tclearDefaultConfig();\n\t\tsetDefaultConfig('xAxis');\n\t\tsetDefaultConfig('yAxis');\n\n\t\tfunction setDefaultConfig(axis) {\n\t\t\tlet curve = getCurve(self.treeConfig[0], axis);\n\t\t\tif (!curve) return;\n\t\t\tlet family = wiApi.getFamily(curve.idFamily);\n\t\t\tif (!family) return;\n\t\t\tswitch (axis) {\n\t\t\t\tcase 'xAxis':\n\t\t\t\t\tself.defaultConfig.left = family.family_spec[0].minScale;\n\t\t\t\t\tself.defaultConfig.right = family.family_spec[0].maxScale;\n\t\t\t\t\tself.defaultConfig.logaX = (family.family_spec[0].displayType.toLowerCase() === 'logarithmic');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'yAxis':\n\t\t\t\t\tself.defaultConfig.top = family.family_spec[0].maxScale;\n\t\t\t\t\tself.defaultConfig.bottom = family.family_spec[0].minScale;\n\t\t\t\t\tself.defaultConfig.logaY = family.family_spec[0].displayType.toLowerCase() === 'logarithmic';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('---give me axis');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction genZonationAllZS(top, bottom, color = 'blue') {\n\t\treturn {\n\t\t\tname: 'ZonationAll',\n\t\t\tzones: [{\n\t\t\t\tstartDepth: top,\n\t\t\t\tendDepth: bottom,\n\t\t\t\tzone_template: {\n\t\t\t\t\tname: 'ZonationAll',\n\t\t\t\t\tbackground: color\n\t\t\t\t}\n\t\t\t}]\n\t\t}\n\t}\n\n\tfunction filterData(curveData, zone) {\n\t\treturn curveData.filter(d => ((zone.startDepth - d.depth)*(zone.endDepth - d.depth) <= 0));\n\t}\n\n\tthis.getTop = () => (isNaN(self.config.top) ? (self.defaultConfig.top || 0) : self.config.top)\n\tthis.getBottom = () => (isNaN(self.config.bottom) ? (self.defaultConfig.bottom || 0) : self.config.bottom)\n\tthis.getLeft = () => (isNaN(self.config.left) ? (self.defaultConfig.left || 0) : self.config.left)\n\tthis.getRight = () => (isNaN(self.config.right) ? (self.defaultConfig.right || 0) : self.config.right)\n\tthis.getMajorX = () => ( self.config.majorX || self.defaultConfig.majorX || 5 )\n\tthis.getMajorY = () => ( self.config.majorY || self.defaultConfig.majorY || 5 )\n\tthis.getMinorX = () => ( self.config.minorX || self.defaultConfig.minorX || 1 )\n\tthis.getMinorY = () => ( self.config.minorY || self.defaultConfig.minorY || 1 )\n\tthis.getLogaX = () => (self.config.logaX || self.defaultConfig.logaX || 0)\n\tthis.getLogaY = () => (self.config.logaY || self.defaultConfig.logaY || 0)\n\tthis.getColorMode = () => (self.config.colorMode || self.defaultConfig.colorMode || 'zone')\n\tthis.getColor = (zone, well) => {\n\t\tlet cMode = self.getColorMode();\n\t\treturn cMode === 'zone' ? zone.zone_template.background:(cMode === 'well'?well.color:'red');\n\t}\n\n\tthis.saveToAsset = function() {\n\t\tlet type = 'CROSSPLOT';\n\t\tlet content = {\n\t\t\twellSpec: self.wellSpec,\n\t\t\tzonesetName: self.zonesetName,\n\t\t\tselectionType: self.selectionType,\n\t\t\tselectionXValue: self.selectionXValue,\n\t\t\tselectionYValue: self.selectionYValue,\n\t\t\tconfig: self.config\t\n\t\t}\n\t\tif (!self.idCrossplot) {\n\t\t\twiDialog.promptDialog({\n\t\t\t\ttitle: 'New Crossplot',\n\t\t\t\tinputName: 'Crossplot Name',\n\t\t\t\tinput: self.getConfigTitle(),\n\t\t\t}, function(name) {\n\t\t\t\tcontent.config.title = name;\n\t\t\t\twiLoading.show($element.find('.main')[0]);\n\t\t\t\twiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\n\t\t\t\t\tself.setConfigTitle(null, name);\n\t\t\t\t\tself.idCrossplot = res.idParameterSet;\n\t\t\t\t\twiLoading.hide();\n\t\t\t\t\tself.onSave && self.onSave('multi-well-crossplot' + res.idParameterSet, name);\n\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\twiLoading.hide();\n\t\t\t\t\t\tself.saveToAsset();\n\t\t\t\t\t})\n\t\t\t});\n\t\t} else {\n\t\t\twiLoading.show($element.find('.main')[0]);\n\t\t\tcontent.idParameterSet = self.idParameterSet;\n\t\t\twiApi.editAssetPromise(self.idCrossplot, content).then(res => {\n\t\t\t\twiLoading.hide();\n\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\twiLoading.hide();\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t});\n\t\t}\n\t}\n\tthis.saveAs = function() {\n        console.log(\"saveAs\");\n        wiDialog.promptDialog({\n            title: 'New Crossplot',\n            inputName: 'Crossplot Name',\n            input: '',\n        }, function(name) {\n            let type = 'CROSSPLOT';\n            let content = {\n                wellSpec: self.wellSpec,\n                zonesetName: self.zonesetName,\n                selectionType: self.selectionType,\n                selectionValue: self.selectionValue,\n                config: {...self.config, title: name} \n            }\n            wiApi.newAssetPromise(self.idProject, name, type, content).then(res => {\n                // self.setConfigTitle(null, name);\n                self.idCrossplot = res.idParameterSet;\n                console.log(res);\n                self.onSave && self.onSave('multi-well-crossplot' + res.idParameterSet, name);\n            })\n                .catch(e => {\n                    console.error(e);\n                    self.saveAs();\n                })\n        });\n    }\n\n\tlet _zoneNames = []\n\tself.getZoneNames = function() {\n\t\t_zoneNames.length = 0;\n\t\tObject.assign(_zoneNames, self.crossplotList.map(bins => bins.name));\n\t\treturn _zoneNames;\n\t}\n\n\t//--------------\n\tthis.click2ToggleLayer = function ($event, node, selectedObjs) {            \n\t\tnode._notUsed = !node._notUsed;                                         \n\t\tself.selectedLayers = Object.values(selectedObjs).map(o => o.data);     \n\t}                                                                           \n\n\tthis.runLayerMatch = function (node, criteria) {                            \n\t\tlet keySearch = criteria.toLowerCase();                                 \n\t\tlet searchArray = node.name.toLowerCase();                              \n\t\treturn searchArray.includes(keySearch);                                 \n\t}                                                                           \n\t//--------------\n\tthis.hideSelectedLayer = function() {                                                                                                                            \n\t\tif(!self.selectedLayers) return;                                        \n\t\tself.selectedLayers.forEach(layer => layer._notUsed = true);            \n\t}                                                                           \n\tthis.showSelectedLayer = function() {                                       \n\t\tif(!self.selectedLayers) return;                                        \n\t\tself.selectedLayers.forEach(layer => layer._notUsed = false);           \n\t\t$timeout(() => {});                                                     \n\t}                                                                           \n\tthis.hideAllLayer = function() {                                            \n\t\tself.layers.forEach(bins => bins._notUsed = true);               \n\t\t$timeout(() => {});                                                     \n\t}                                                                           \n\tthis.showAllLayer = function() {                                            \n\t\tself.layers.forEach(bins => bins._notUsed = false);              \n\t\t$timeout(() => {});                                                     \n\t}\n\n\tthis.hideSelectedZone = function() {\n\t\tif(!self.selectedZones) return;\n\t\tself.selectedZones.forEach(layer => layer._notUsed = true);\n\t}\n\tthis.showSelectedZone = function() {\n\t\tif(!self.selectedZones) return;\n\t\tself.selectedZones.forEach(layer => layer._notUsed = false);\n\t\t$timeout(() => {});\n\t}\n\tthis.hideAllZone = function() {\n\t\tself.zoneTree.forEach(bins => bins._notUsed = true);\n\t\t$timeout(() => {});\n\t}\n\tthis.showAllZone = function() {\n\t\tself.zoneTree.forEach(bins => bins._notUsed = false);\n\t\t$timeout(() => {});\n\t}\n\tthis.onDrop = function (event, helper, myData) {\n\t\tlet idWells = helper.data('idWells');\n\t\tif (idWells && idWells.length) {\n\t\t\t$timeout(() => {\n\t\t\t\tfor (let idWell of idWells) {\n\t\t\t\t\tif (!self.wellSpec.find(wsp => wsp.idWell === idWell)) {\n\t\t\t\t\t\tself.wellSpec.push({idWell});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\tthis.toggleWell = function(well) {\n\t\twell._notUsed = !well._notUsed;\n\t}\n\tthis.removeWell = function(well) {\n\t\tlet index = self.wellSpec.findIndex(wsp => wsp.idWell === well.idWell);\n\t\tif(index >= 0) {\n\t\t\tself.wellSpec.splice(index, 1);\n\t\t}\n\t}\n\n\tthis.addUDL = function() {\n\t\tlet udl = {};\n\t\tudl.text = \"\";\n\t\tudl.fn = (function(x) { \n\t\t\treturn eval(this.text);\n\t\t}).bind(udl);\n\t\tudl.latex = \"y = x^2\";\n\t\tudl.lineStyle = {\n\t\t\tlineColor: 'red',\n\t\t\tlineWidth: 1,\n\t\t\tlineStyle: [10, 0]\n\t\t};\n\t\tself.udls.push(udl);\n\t}\n\tthis.genRegs = function() {\n\t\tself.regs = [...self.layers];\n\t}\n\tthis.layers = [];\n\tthis.genLayers = async function() {\n\t\tself.layers = self.layers || []\t;\n\t\tlet layers = [];\n\t\tself.treeConfig.forEach(async (well, idx) => {\n\t\twiLoading.show($element.find('.main')[0]);\n\t\t\tif (well._notUsed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet curveX = self.getCurve(well, 'xAxis');\n\t\t\tlet curveY = self.getCurve(well, 'yAxis');\n\t\t\tif (!curveX || !curveY) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet datasetTopX = self.wellSpec[idx].xAxis.datasetTop;\n\t\t\tlet datasetBottomX = self.wellSpec[idx].xAxis.datasetBottom;\n\t\t\tlet datasetStepX = self.wellSpec[idx].xAxis.datasetStep;\n\t\t\tlet datasetX = well.datasets.find(ds => ds.idDataset === self.wellSpec[idx].xAxis.idDataset);\n\n\t\t\tlet datasetTopY = self.wellSpec[idx].yAxis.datasetTop;\n\t\t\tlet datasetBottomY = self.wellSpec[idx].yAxis.datasetBottom;\n\t\t\tlet datasetStepY = self.wellSpec[idx].yAxis.datasetStep;\n\t\t\tlet datasetY = well.datasets.find(ds => ds.idDataset === self.wellSpec[idx].yAxis.idDataset);\n\n\t\t\tlet zoneset = getZoneset(well, self.zonesetName);\n\t\t\tzoneset = zoneset || genZonationAllZS(d3.max([datasetTopX, datasetTopY]), d3.min([datasetBottomX, datasetBottomY]), well.color)\n\n\t\t\tlet curveDataX = await wiApi.getCachedCurveDataPromise(curveX.idCurve);\n\t\t\tlet curveDataY = await wiApi.getCachedCurveDataPromise(curveY.idCurve);\n\n\t\t\tcurveDataX = curveDataX\n\t\t\t\t.filter(d => _.isFinite(d.x))\n\t\t\t\t.map(d => ({\n\t\t\t\t\t...d,\n\t\t\t\t\tdepth: datasetStepX > 0 ? (datasetTopX + d.y * datasetStepX) : d.y\n\t\t\t\t}));\n\t\t\tcurveDataY = curveDataY\n\t\t\t\t.filter(d => _.isFinite(d.x))\n\t\t\t\t.map(d => ({\n\t\t\t\t\t...d,\n\t\t\t\t\tdepth: datasetStepY > 0 ? (datasetTopY + d.y * datasetStepY) : d.y\n\t\t\t\t}));\n\n\t\t\tlet zones = zoneset.zones.filter(zone => {\n\t\t\t\tlet z = self.zoneTree.find(z1 => {\n\t\t\t\t\treturn z1.zone_template.name === zone.zone_template.name\n\t\t\t\t});\n\t\t\t\treturn !z._notUsed;\n\t\t\t});\n\n\t\t\tif (self.getColorMode() == 'zone') {\n\t\t\t\tzones.forEach(zone => {\n\t\t\t\t\tlet dataArrayX = filterData(curveDataX, zone);\n\t\t\t\t\tlet dataArrayY = filterData(curveDataY, zone);\n\t\t\t\t\tdataArrayX.top = zone.startDepth;\n\t\t\t\t\tdataArrayX.bottom = zone.endDepth;\n\t\t\t\t\tdataArrayY.top = zone.startDepth;\n\t\t\t\t\tdataArrayY.bottom = zone.endDepth;\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\tlayers.push({\n\t\t\t\t\t\t\tdataX: dataArrayX.map(d => d.x),\n\t\t\t\t\t\t\tdataY: dataArrayY.map(d => d.x),\n\t\t\t\t\t\t\tcolor: self.getColor(zone, well),\n\t\t\t\t\t\t\tname: `${well.name}.${zone.zone_template.name}`\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t$timeout(() => {\n\t\t\t\t\tlayers.push({\n\t\t\t\t\t\tdataX: curveDataX.map(d => d.x),\n\t\t\t\t\t\tdataY: curveDataY.map(d => d.x),\n\t\t\t\t\t\tcolor: well.color ,\n\t\t\t\t\t\tname: well.name\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t}\n\t\t\twiLoading.hide();\n\t\t})\n\t\tself.layers = layers;\n\t}\n}\n\n\n//# sourceURL=webpack:///./multi-well-crossplot/index.js?");

/***/ }),

/***/ "./multi-well-crossplot/style.less":
/*!*****************************************!*\
  !*** ./multi-well-crossplot/style.less ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./style.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./multi-well-crossplot/style.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./multi-well-crossplot/style.less?");

/***/ }),

/***/ "./multi-well-crossplot/template.html":
/*!********************************************!*\
  !*** ./multi-well-crossplot/template.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"main\\\">\\n    <wi-droppable style=\\\"display:flex; width: 100%;;\\\" on-drop=\\\"self.onDrop\\\"\\n        container-style=\\\"{display:'flex',flex: 1, position: 'relative'}\\\">\\n        <div class=\\\"main-body\\\">\\n            <div class=\\\"label-list-view ng-scope\\\"\\n                style=\\\"display :flex; background: #f4f4f4; padding: 12px 15px; justify-content: flex-start;\\\">\\n                <span ng-click=\\\"self.refresh()\\\" class=\\\"reload-16x16\\\"\\n                    style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n                <span ng-click=\\\"self.saveToAsset()\\\" class=\\\"save-16x16\\\"\\n                    style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n                <span ng-click=\\\"self.saveAs()\\\" class=\\\"save-as-16x16\\\"\\n                    style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n                <span ng-click=\\\"\\\" class=\\\"print-16x16\\\" style=\\\"cursor: pointer; margin-right: 10px;\\\"></span>\\n            </div>\\n\\n            <div class=\\\"main-body-center border-style\\\" style=\\\"position: relative;\\\">\\n                <layer-collection v-padding=\\\"50\\\" h-padding='60'>\\n                    <axis-layer min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\" loga=\\\"self.getLogaX()\\\"\\n                        n-ticks=\\\"self.getMajorX() * self.getMinorX()\\\" minor-ticks=\\\"self.getMinorX()\\\" precision=\\\"4\\\"\\n                        grid=\\\"!!self.config.grid\\\" placement=\\\"1\\\">\\n                    </axis-layer>\\n                    <axis-layer min-val='self.getBottom()' max-val='self.getTop()'\\n                        n-ticks=\\\"self.getMajorY() * self.getMinorY()\\\" minor-ticks=\\\"self.getMinorY()\\\"\\n                        loga=\\\"self.getLogaY()\\\" precision=\\\"4\\\" grid=\\\"!!self.config.grid\\\" axis-direction=\\\"'up'\\\"\\n                        placement=\\\"0\\\"></axis-layer>\\n                    <scatter-layer ng-show=\\\"!layer._notUsed\\\" min-val=\\\"self.getLeft()\\\" max-val=\\\"self.getRight()\\\"\\n                        min-y=\\\"self.getBottom()\\\" max-y=\\\"self.getTop()\\\" loga=\\\"self.getLogaX()\\\"\\n                        ortho-loga=\\\"self.getLogaY()\\\" my-data-x=\\\"layer.dataX\\\" my-data-y=\\\"layer.dataY\\\" symbol=\\\"'circle'\\\"\\n                        symbol-size=\\\"5\\\" symbol-fill-style=\\\"layer.color\\\" symbol-stroke-style=\\\"'transparent'\\\"\\n                        ng-repeat=\\\"layer in self.layers\\\">\\n                    </scatter-layer>\\n                    <line-formula-layer min-val='self.getLeft()' max-val=\\\"self.getRight()\\\" min-draw='self.getLeft()'\\n                        max-draw=\\\"self.getRight()\\\" min-y=\\\"self.getBottom()\\\" min-draw-y=\\\"self.getBottom()\\\"\\n                        max-y=\\\"self.getTop()\\\" max-draw-y=\\\"self.getTop()\\\" ortho-loga=\\\"self.getLogaY()\\\"\\n                        loga=\\\"self.getLogaX()\\\" formula=\\\"udl\\\" eqn-offsets=\\\"['50px', '0%']\\\"\\n                        line-color=\\\"udl.lineStyle.lineColor\\\" line-dash=\\\"udl.lineStyle.lineStyle.join(' ')\\\"\\n                        line-width=\\\"udl.lineStyle.lineWidth\\\" ng-repeat=\\\"udl in self.udls\\\" show-equation='true'>\\n                    </line-formula-layer>\\n                </layer-collection>\\n                <p style=\\\"position: absolute;left: 50%; transform: translateX(-50%); bottom: 0\\\">\\n                    {{self.getConfigXLabel()}} </p>\\n                <p\\n                    style=\\\"position: absolute; top: 23px; right: 45%;text-transform: uppercase; font-weight: bold; transform: translateY(-50%);\\\">\\n                    {{self.getConfigTitle()}}</p>\\n                <p style=\\\"position: absolute;top: 23px;left: 15px; transform: translateY(-50%);\\\">\\n                    {{self.getConfigYLabel()}}</p>\\n            </div>\\n            <div class=\\\"statistic-table\\\">\\n                <div style=\\\"overflow: auto; position: absolute;\\\">\\n                    <wi-table-view ng-if=\\\"self.crossplotList.length\\\" row-count=\\\"self.getZoneNames().length\\\"\\n                        col-count=\\\"self.getHeaders().length\\\" col-headers=\\\"self.getHeaders()\\\"\\n                        row-headers=\\\"self.getZoneNames()\\\" accessor=\\\"self.statsValue\\\">\\n                    </wi-table-view>\\n                </div>\\n            </div>\\n        </div>\\n        <div style=\\\" height: 100%; right: 0; border-left: 1px solid #eee; box-shadow: 0 0 20px #0000001c;\\\">\\n            <side-bar my-default-width=\\\"420\\\" orientation=\\\"w\\\" collapsed=\\\"false\\\">\\n                <div style=\\\"display: flex; flex-direction: column; height: 100%;flex: 1;\\\">\\n                    <div style=\\\"display: flex; flex-direction: column; width: 100%; height: 100%;\\\">\\n                        <div ng-show=\\\"isSet(1)\\\" style=\\\"overflow: auto;flex: 1;display:flex;flex-direction:column;\\\">\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"margin-top: 10px; display: flex; justify-content: space-between;\\\">\\n                                <span>INPUT</span>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.selectionType === 'family-group'}\\\"\\n                                        ng-click=\\\"self.selectionType='family-group'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\">family-group</span>\\n                                    <span ng-class=\\\"{'active' : self.selectionType === 'family'}\\\"\\n                                        ng-click=\\\"self.selectionType='family'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\">family</span>\\n                                    <span ng-class=\\\"{'active' : self.selectionType === 'curve'}\\\"\\n                                        ng-click=\\\"self.selectionType='curve'\\\" class=\\\"button-with-lable\\\">curve</span>\\n                                </div>\\n\\n                            </div>\\n                            <div style=\\\"padding-bottom: 0;\\\" class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\">\\n                                    <span>X Axis</span>\\n                                    <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.selectionList'\\n                                        current-select=\\\"self.selectionXValue\\\"\\n                                        on-item-changed=\\\"self.onInputXSelectionChanged\\\">\\n                                    </wi-dropdown-list>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\">\\n                                    <span>Y Axis</span>\\n                                    <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.selectionList'\\n                                        current-select=\\\"self.selectionYValue\\\"\\n                                        on-item-changed=\\\"self.onInputYSelectionChanged\\\">\\n                                    </wi-dropdown-list>\\n                                </div>\\n                            </div>\\n                            <div style=\\\"overflow: overlay; display:flex; flex-direction: column;\\\">\\n                                <div style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px; cursor: pointer;\\\"\\n                                    ng-repeat='well in self.treeConfig'>\\n                                    <div\\n                                        style=\\\"display: flex; flex-direction: row;padding: 15px 15px 6px 15px;background: #f4f4f4; align-items: center;justify-content: space-between;text-align: center;\\\">\\n                                        <div style=\\\"display: flex; align-items: center;\\\">\\n                                            <i class=\\\"header-icon\\\"\\n                                                ng-class=\\\"{'fa fa-caret-down': !well._hidden, 'fa fa-caret-right': well._hidden}\\\"\\n                                                ng-click=\\\"well._hidden = !well._hidden\\\"></i>\\n                                            <span\\n                                                ng-class=\\\"{'red-color fa fa-eye-slash': well._notUsed, 'blue-color fa fa-eye': !well._notUsed }\\\"\\n                                                ng-click=\\\"self.toggleWell(well)\\\"\\n                                                style=\\\"cursor: pointer; margin-right: 15px;\\\">\\n                                            </span>\\n                                            <span class=\\\"fa fa-times-circle\\\" ng-click=\\\"self.removeWell(well)\\\"\\n                                                style=\\\"color: rgb(163, 163, 163);cursor: pointer;margin-right: 15px;\\\">\\n                                            </span>\\n                                            <div ng-bind=\\\"well.name\\\" style=\\\"font-weight: bold;\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;display: flex; flex-direction: row;padding:11px 15px 15px 15px;background: #f4f4f4; align-items: center;justify-content: flex-start;text-align: center;\\\">\\n                                        <div class=\\\"axis-bar\\\" ng-class='{\\\"selected\\\": well.isSettingAxis == \\\"xAxis\\\"}'\\n                                            style=\\\"margin-right: 7px;\\\" ng-click=\\\"well.isSettingAxis = 'xAxis'\\\">\\n                                            <div ng-bind=\\\"'X'\\\"> </div>\\n                                            <div style=\\\"margin: 0 10px;\\n                                                        max-width: 70px;\\n                                                        white-space: nowrap;\\n                                                        text-overflow: ellipsis;\\n                                                        overflow: hidden;\\\"\\n                                                ng-bind=\\\"self.getWellSpec(well).xAxis.datasetName\\\"></div>\\n                                            <div ng-bind=\\\"self.getCurve(well, 'xAxis').name\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"axis-bar\\\" style=\\\"margin-left: 7px;\\\"\\n                                            ng-class='{\\\"selected\\\": well.isSettingAxis == \\\"yAxis\\\"}'\\n                                            ng-click=\\\"well.isSettingAxis = 'yAxis'\\\">\\n                                            <div ng-bind=\\\"'Y'\\\"> </div>\\n                                            <div style=\\\"margin: 0 10px;\\n                                                        max-width: 70px;\\n                                                        white-space: nowrap;\\n                                                        text-overflow: ellipsis;\\n                                                        overflow: hidden;\\\"\\n                                                ng-bind=\\\"self.getWellSpec(well).yAxis.datasetName\\\"></div>\\n                                            <div ng-bind=\\\"self.getCurve(well, 'yAxis').name\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                    <wi-tree-view ng-show=\\\"!well._hidden\\\" tree-root=\\\"well\\\" get-label=\\\"self.getLabel\\\"\\n                                        filter=\\\"self.getFilterForWell(well.isSettingAxis)\\\" get-icon=\\\"self.getIcon\\\"\\n                                        get-children=\\\"self.getChildren\\\" keep-children='true' uncollapsible='true'\\n                                        run-match=\\\"self.runMatch\\\" hide-unmatched=\\\"true\\\" hide-search='true'\\n                                        click-fn='self.clickFunction'>\\n                                    </wi-tree-view>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div ng-show=\\\"isSet(2)\\\"\\n                            style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                            <div class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\">\\n                                    <span>Zoneset</span>\\n                                    <wi-dropdown-list style=\\\"flex:1; margin-left: 10px;\\\" items='self.zonesetList'\\n                                        current-select=\\\"self.zonesetName\\\"\\n                                        on-item-changed=\\\"self.onZonesetSelectionChanged\\\">\\n                                    </wi-dropdown-list>\\n                                </div>\\n                            </div>\\n                            <div style=\\\"display: flex; padding: 0 16px 7px 16px;\\\">\\n                                <span ng-click=\\\"self.hideSelectedZone()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 0;\\\">Hide</span>\\n                                <span ng-click=\\\"self.showSelectedZone()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 10px;\\\">Show</span>\\n                                <span ng-click=\\\"self.hideAllZone()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 10px;\\\">Hide All</span>\\n                                <span ng-click=\\\"self.showAllZone()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 10px;\\\">Show All</span>\\n                            </div>\\n                            <div ng-show=\\\"self.zoneTree\\\"\\n                                style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px;flex: 1;overflow: auto; \\\">\\n                                <wi-tree-view tree-root=\\\"self.zoneTree\\\" get-label=\\\"self.getZoneLabel\\\"\\n                                    filter=\\\"self.zoneFilter\\\" get-icon=\\\"self.getZoneIcon\\\" get-children=\\\"self.noChildren\\\"\\n                                    keep-children='true' run-match=\\\"self.runZoneMatch\\\" hide-unmatched=\\\"true\\\"\\n                                    hide-search='false' click-fn='self.click2ToggleZone'>\\n                                </wi-tree-view>\\n                            </div>\\n                            <div ng-hide=\\\"self.zoneTree\\\" style=\\\"border: 1px solid #e4e4e4; margin: 5px 15px;\\\">\\n                                zonationAll\\n                            </div>\\n\\n                        </div>\\n                        <div ng-show=\\\"isSet(3)\\\" style=\\\"\\n                        overflow: auto;\\n                        flex: 1;\\n                        display: flex;\\n                        flex-direction: column;\\\">\\n                            <div class=\\\"lable-option-sidebar\\\" style=\\\"margin-top: 10px;\\\">\\n                                <span>General Options</span>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Title'\\\" item-value=\\\"self.getConfigTitle\\\"\\n                                        set-value=\\\"self.setConfigTitle\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                            </div>\\n\\n                            <div class=\\\"lable-option-sidebar\\\" style=\\\"margin-top: 10px;\\\">\\n                                <span>X Axis Options</span>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Left'\\\" item-value=\\\"self.getConfigLeft\\\"\\n                                        set-value=\\\"self.setConfigLeft\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Right'\\\" item-value=\\\"self.getConfigRight\\\"\\n                                        set-value=\\\"self.setConfigRight\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Major X'\\\" item-value=\\\"self.getConfigMajorX\\\"\\n                                        set-value=\\\"self.setConfigMajorX\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Minor X'\\\" item-value=\\\"self.getConfigMinorX\\\"\\n                                        set-value=\\\"self.setConfigMinorX\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'X Label'\\\" item-value=\\\"self.getConfigXLabel\\\"\\n                                        set-value=\\\"self.setConfigXLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                            </div>\\n\\n\\n                            <div class=\\\"lable-option-sidebar\\\" style=\\\"margin-top: 10px;\\\">\\n                                <span>Y Axis Options</span>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\">\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Top'\\\" item-value=\\\"self.getConfigTop\\\" set-value=\\\"self.setConfigTop\\\"\\n                                        enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Bottom'\\\" item-value=\\\"self.getConfigBottom\\\"\\n                                        set-value=\\\"self.setConfigBottom\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Major Y'\\\" item-value=\\\"self.getConfigMajorY\\\"\\n                                        set-value=\\\"self.setConfigMajorY\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Minor Y'\\\" item-value=\\\"self.getConfigMinorY\\\"\\n                                        set-value=\\\"self.setConfigMinorY\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                                <div style=\\\"margin-bottom: 15px; \\\"></div>\\n\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Y Label'\\\" item-value=\\\"self.getConfigYLabel\\\"\\n                                        set-value=\\\"self.setConfigYLabel\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Log scales\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.getLogaX()}\\\" style=\\\"margin-right: 8px;\\\"\\n                                        ng-click=\\\"self.config.logaX=!self.config.logaX\\\" class=\\\"button-with-lable\\\">Loga\\n                                        X</span>\\n                                    <span ng-class=\\\"{'active' : self.getLogaY()}\\\" style=\\\"margin-right: 8px;\\\"\\n                                        ng-click=\\\"self.config.logaY=!self.config.logaY\\\" class=\\\"button-with-lable\\\">Loga\\n                                        Y</span>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Color Mode\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'zone'}\\\"\\n                                        ng-click=\\\"self.config.colorMode='zone'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\"> Zone Color</span>\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'well'}\\\"\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.config.colorMode='well'\\\"\\n                                        class=\\\"button-with-lable\\\">Well Color</span>\\n                                    <span ng-class=\\\"{'active' : self.config.colorMode === 'user'}\\\"\\n                                        ng-click=\\\"self.config.colorMode='user'\\\" class=\\\"button-with-lable\\\">User\\n                                        Defined</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Depth Limitation\\n                                    Mode\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <div ng-show=\\\"self.config.limitType === 'interval'\\\">\\n                                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                                item-label=\\\"'Top'\\\" item-value=\\\"self.getConfigLimitTop\\\"\\n                                                set-value=\\\"self.setConfigLimitTop\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                            </editable>\\n                                        </div>\\n                                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                        <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                            <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                                item-label=\\\"'Bottom'\\\" item-value=\\\"self.getConfigLimitBottom\\\"\\n                                                set-value=\\\"self.setConfigLimitBottom\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                                content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                            </editable>\\n                                        </div>\\n                                        <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                    </div>\\n                                    <span ng-class=\\\"{'active' : self.config.limitType === 'interval'}\\\"\\n                                        ng-click=\\\"self. config.limitType = 'interval'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\"> Interval Depth</span>\\n                                    <span ng-class=\\\"{'active' : self.config.limitType === 'zonal'}\\\"\\n                                        ng-click=\\\"self.config.limitType = 'zonal'\\\" class=\\\"button-with-lable\\\">Zonal\\n                                        Depth</span>\\n                                    <div style=\\\"margin-bottom: 15px; \\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div ng-show=\\\"isSet(5)\\\"\\n                            style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Orientation\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.orientation === 'portrait'}\\\"\\n                                        ng-click=\\\"self.printSettings.orientation='portrait'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\">Portrait</span>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.orientation === 'landscape'}\\\"\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.printSettings.orientation='landscape'\\\"\\n                                        class=\\\"button-with-lable\\\">Landscape</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Aspect Ratio\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.aspectRatio === '16:9'}\\\"\\n                                        ng-click=\\\"self.printSettings.aspectRatio='16:9'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\">16:9</span>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.aspectRatio === '4:3'}\\\"\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.printSettings.aspectRatio='4:3'\\\"\\n                                        class=\\\"button-with-lable\\\">4:3</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div style=\\\"font-size: 10px;display: flex;margin-bottom: 16px;\\\">Alignment\\n                                    <div\\n                                        style=\\\"border-bottom: 1px solid #e4e4e4;flex: 1;margin-left: 15px;margin-bottom: 6px;\\\">\\n                                    </div>\\n                                </div>\\n                                <div>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.alignment === 'left'}\\\"\\n                                        ng-click=\\\"self.printSettings.alignment='left'\\\" class=\\\"button-with-lable\\\"\\n                                        style=\\\"margin-right: 8px;\\\">Left</span>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.alignment === 'center'}\\\"\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.printSettings.alignment='center'\\\"\\n                                        class=\\\"button-with-lable\\\">Center</span>\\n                                    <span ng-class=\\\"{'active' : self.printSettings.alignment === 'right'}\\\"\\n                                        style=\\\"margin-right: 8px;\\\" ng-click=\\\"self.printSettings.alignment='right'\\\"\\n                                        class=\\\"button-with-lable\\\">Right</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"lable-option-sidebar\\\"\\n                                style=\\\"padding: 20px 20px; display: flex; justify-content: space-between;  flex-direction: column;\\\">\\n                                <div class=\\\"selection-sidebar\\\" style=\\\"padding: 9px 10px 5px 10px;\\\">\\n                                    <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                        item-label=\\\"'Width(mm)'\\\" item-value=\\\"self.printSettings.width\\\"\\n                                        set-value=\\\"self.setWidthPrintSettings\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                        content-style=\\\"{flex:1,float:'none','text-align':'right'}\\\">\\n                                    </editable>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div ng-show=\\\"isSet(6)\\\"\\n                            style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                            <div class='bottom-add' ng-click=\\\"self.addUDL()\\\">Add</div>\\n                            <div style=\\\"overflow: overlay;\\\">\\n                                <div class=\\\"list-formular\\\" ng-repeat=\\\"udl in self.udls\\\">\\n                                    <div class=\\\"selection-sidebar\\\"\\n                                        style=\\\"padding: 9px 10px 5px 10px; flex: 4; margin-right: 15px; border: none;\\\">\\n                                        <editable style=\\\"flex:1;display:flex;flex-direction:row;overflow:hidden;\\\"\\n                                            item-label=\\\"'Y = '\\\" item-value=\\\"self.getFnUDL\\\" params=\\\"$index\\\"\\n                                            set-value=\\\"self.setFnUDL\\\" enabled=\\\"true\\\" label-style=\\\"{}\\\"\\n                                            content-style=\\\"{flex:1,float:'none','text-align':'left'}\\\">\\n                                        </editable>\\n                                    </div>\\n                                    <div class=\\\"selection-sidebar\\\"\\n                                        style=\\\"padding: 9px 10px 5px 10px; cursor: pointer; flex: 1; border: none;\\\">\\n                                        <line-style bind-line-style=\\\"udl.lineStyle\\\"></line-style>\\n                                    </div>\\n                                    <div class=\\\"fa fa-times delete-button\\\">\\n\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div ng-show=\\\"isSet(8)\\\"\\n                            style=\\\"overflow: hidden;flex: 1; display: flex; flex-direction: column;\\\">\\n                            <div style=\\\"display: flex; padding: 16px 16px 10px 16px;\\\">\\n                                <span ng-click=\\\"self.hideSelectedLayer()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 0px;\\\">Hide</span>\\n                                <span ng-click=\\\"self.showSelectedLayer()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 15px;\\\">Show</span>\\n                                <span ng-click=\\\"self.hideAllLayer()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 15px;\\\">Hide All</span>\\n                                <span ng-click=\\\"self.showAllLayer()\\\" class=\\\"button-with-lable-layer\\\"\\n                                    style=\\\"margin-left: 15px;\\\">Show All</span>\\n                            </div>\\n                            <div ng-show=\\\"self.layers\\\"\\n                                style=\\\"border: 1px solid #e4e4e4;margin: 5px 15px;border-radius: 2px;flex: 1;overflow: auto; \\\">\\n                                <wi-tree-view tree-root=\\\"self.getLayerTree()\\\" get-label=\\\"self.getLayerLabel\\\"\\n                                    filter=\\\"self.layerFilter\\\" get-icon=\\\"self.getLayerIcon\\\"\\n                                    get-icons=\\\"self.getLayerIcons\\\" get-children=\\\"self.noChildren\\\" keep-children='true'\\n                                    run-match=\\\"self.runLayerMatch\\\" hide-unmatched=\\\"true\\\" hide-search='false'\\n                                    click-fn='self.click2ToggleLayer'>\\n                                </wi-tree-view>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div style=\\\"display: flex;\\\">\\n                        <span class=\\\"button-update\\\" ng-click=\\\"self.genLayers()\\\">\\n                            Update\\n                        </span>\\n                    </div>\\n                </div>\\n                <div class=\\\"label-list-view\\\" style=\\\" display :flex;\\n                        border-left: 1px solid #e4e4e4; \\n                        flex-direction: column;\\n                        justify-content: start;\\n                        padding: 0px;\\n                        right: 0;\\n                        position: sticky;\\\">\\n                    <div\\n                        style=\\\"overflow-y: overlay; overflow-x: hidden; display :flex; flex-direction: column; justify-content: start; box-shadow: 0 10px 10px #00000017;\\\">\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(1)}\\\" ng-click=\\\"setTab(1)\\\">\\n                            <div style=\\\"margin: 10px;\\\">\\n                                Wells\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(2)}\\\" ng-click=\\\"setTab(2)\\\">\\n                            <div>\\n                                Zone\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(3)}\\\" ng-click=\\\"setTab(3)\\\">\\n                            <div>\\n                                Config\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(4)}\\\" ng-click=\\\"setTab(4)\\\">\\n                            <div style=\\\"margin: 5px;\\\">\\n                                Z Axis\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(5)}\\\" ng-click=\\\"setTab(5)\\\">\\n                            <div style=\\\"margin: 4px;\\\">\\n                                Print Setting\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(6)}\\\" ng-click=\\\"setTab(6)\\\">\\n                            <div style=\\\"margin: 22px;\\\">\\n                                Formula\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(7)}\\\" ng-click=\\\"setTab(7)\\\">\\n                            <div style=\\\"margin: 10px;\\\">\\n                                Regression Line\\n                            </div>\\n                        </div>\\n                        <div class=\\\"tab-with-lable\\\" ng-class=\\\"{'active' : isSet(8)}\\\" ng-click=\\\"setTab(8)\\\">\\n                            <div style=\\\"margin: 30px;\\\">\\n                                Layers\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n             </side-bar>\\n        </div>\\n    </wi-droppable>\\n</div>\";\n\n//# sourceURL=webpack:///./multi-well-crossplot/template.html?");

/***/ })

/******/ });